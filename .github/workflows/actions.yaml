name: Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ] 
jobs:
  code-check:
    name: Check formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run the formatter, linter, and vetter
        uses: dell/common-github-actions/go-code-formatter-linter-vetter@main
        with:
          directories: ./... #TODO: verify when actual code is in the repo

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3.2.0
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./... #TODO: verify when actual code is in the repo

  malware_security_scan:
      name: Malware Scanner
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v3.2.0
        - name: Malware Scanner
          uses: dell/common-github-actions/malware-scanner@main
          with:
            directories: . #TODO: verify when actual code is in the repo
            options: -ri

  code-sanitizer:
    name: Check for forbidden words
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run the forbidden words scan
        uses: dell/common-github-actions/code-sanitizer@main
        with:
          args: /github/workspace/ #TODO: verify when actual code is in the repo

  tests:
    name: Run Go unit tests and check package coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run unit tests and check package coverage
        uses: dell/common-github-actions/go-code-tester@main
        with:
          threshold: 90
          test-folder: "." #TODO: verify when actual code is in the repo
