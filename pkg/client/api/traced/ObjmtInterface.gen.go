// Code generated by gowrap. DO NOT EDIT.
// template: https://raw.githubusercontent.com/hexdigest/gowrap/6c8f05695fec23df85903a8da0af66ac414e2a63/templates/opentelemetry
// gowrap: http://github.com/hexdigest/gowrap

package traced

import (
	"context"

	"github.com/dell/goobjectscale/pkg/client/api"
	"github.com/dell/goobjectscale/pkg/client/model"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/trace"
)

// ObjmtInterfaceWithTracing implements api.ObjmtInterface interface instrumented with opentracing spans
type ObjmtInterfaceWithTracing struct {
	api.ObjmtInterface
	_instance      string
	_spanDecorator func(span trace.Span, params, results map[string]interface{})
}

// NewObjmtInterfaceWithTracing returns ObjmtInterfaceWithTracing
func NewObjmtInterfaceWithTracing(base api.ObjmtInterface, instance string, spanDecorator ...func(span trace.Span, params, results map[string]interface{})) ObjmtInterfaceWithTracing {
	d := ObjmtInterfaceWithTracing{
		ObjmtInterface: base,
		_instance:      instance,
	}

	if len(spanDecorator) > 0 && spanDecorator[0] != nil {
		d._spanDecorator = spanDecorator[0]
	}

	return d
}

// GetAccountBillingInfo implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetAccountBillingInfo(ctx context.Context, ids []string, params map[string]string) (ap1 *model.AccountBillingInfoList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetAccountBillingInfo")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":    ctx,
				"ids":    ids,
				"params": params}, map[string]interface{}{
				"ap1": ap1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetAccountBillingInfo(ctx, ids, params)
}

// GetAccountBillingSample implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetAccountBillingSample(ctx context.Context, ids []string, params map[string]string) (ap1 *model.AccountBillingSampleList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetAccountBillingSample")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":    ctx,
				"ids":    ids,
				"params": params}, map[string]interface{}{
				"ap1": ap1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetAccountBillingSample(ctx, ids, params)
}

// GetBucketBillingInfo implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetBucketBillingInfo(ctx context.Context, account string, ids []string, params map[string]string) (bp1 *model.BucketBillingInfoList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetBucketBillingInfo")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":     ctx,
				"account": account,
				"ids":     ids,
				"params":  params}, map[string]interface{}{
				"bp1": bp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetBucketBillingInfo(ctx, account, ids, params)
}

// GetBucketBillingPerf implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetBucketBillingPerf(ctx context.Context, account string, ids []string, params map[string]string) (bp1 *model.BucketPerfDataList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetBucketBillingPerf")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":     ctx,
				"account": account,
				"ids":     ids,
				"params":  params}, map[string]interface{}{
				"bp1": bp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetBucketBillingPerf(ctx, account, ids, params)
}

// GetBucketBillingSample implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetBucketBillingSample(ctx context.Context, account string, ids []string, params map[string]string) (bp1 *model.BucketBillingSampleList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetBucketBillingSample")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":     ctx,
				"account": account,
				"ids":     ids,
				"params":  params}, map[string]interface{}{
				"bp1": bp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetBucketBillingSample(ctx, account, ids, params)
}

// GetReplicationInfo implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetReplicationInfo(ctx context.Context, account string, replicationPairs [][]string, params map[string]string) (bp1 *model.BucketReplicationInfoList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetReplicationInfo")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":              ctx,
				"account":          account,
				"replicationPairs": replicationPairs,
				"params":           params}, map[string]interface{}{
				"bp1": bp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetReplicationInfo(ctx, account, replicationPairs, params)
}

// GetReplicationSample implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetReplicationSample(ctx context.Context, account string, replicationPairs [][]string, params map[string]string) (bp1 *model.BucketReplicationSampleList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetReplicationSample")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":              ctx,
				"account":          account,
				"replicationPairs": replicationPairs,
				"params":           params}, map[string]interface{}{
				"bp1": bp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetReplicationSample(ctx, account, replicationPairs, params)
}

// GetStoreBillingInfo implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetStoreBillingInfo(ctx context.Context, params map[string]string) (sp1 *model.StoreBillingInfoList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetStoreBillingInfo")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":    ctx,
				"params": params}, map[string]interface{}{
				"sp1": sp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetStoreBillingInfo(ctx, params)
}

// GetStoreBillingSample implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetStoreBillingSample(ctx context.Context, params map[string]string) (sp1 *model.StoreBillingSampleList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetStoreBillingSample")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":    ctx,
				"params": params}, map[string]interface{}{
				"sp1": sp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetStoreBillingSample(ctx, params)
}

// GetStoreReplicationData implements api.ObjmtInterface
func (_d ObjmtInterfaceWithTracing) GetStoreReplicationData(ctx context.Context, ids []string, params map[string]string) (sp1 *model.StoreReplicationDataList, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.ObjmtInterface.GetStoreReplicationData")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":    ctx,
				"ids":    ids,
				"params": params}, map[string]interface{}{
				"sp1": sp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.ObjmtInterface.GetStoreReplicationData(ctx, ids, params)
}
