// Code generated by gowrap. DO NOT EDIT.
// template: https://raw.githubusercontent.com/hexdigest/gowrap/6c8f05695fec23df85903a8da0af66ac414e2a63/templates/opentelemetry
// gowrap: http://github.com/hexdigest/gowrap

package traced

import (
	"context"

	"github.com/dell/goobjectscale/pkg/client/api"
	"github.com/dell/goobjectscale/pkg/client/model"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/trace"
)

// StatusInterfaceWithTracing implements api.StatusInterface interface instrumented with opentracing spans
type StatusInterfaceWithTracing struct {
	api.StatusInterface
	_instance      string
	_spanDecorator func(span trace.Span, params, results map[string]interface{})
}

// NewStatusInterfaceWithTracing returns StatusInterfaceWithTracing
func NewStatusInterfaceWithTracing(base api.StatusInterface, instance string, spanDecorator ...func(span trace.Span, params, results map[string]interface{})) StatusInterfaceWithTracing {
	d := StatusInterfaceWithTracing{
		StatusInterface: base,
		_instance:       instance,
	}

	if len(spanDecorator) > 0 && spanDecorator[0] != nil {
		d._spanDecorator = spanDecorator[0]
	}

	return d
}

// GetRebuildStatus implements api.StatusInterface
func (_d StatusInterfaceWithTracing) GetRebuildStatus(ctx context.Context, objStoreName string, ssPodName string, ssPodNameSpace string, level string, params map[string]string) (rp1 *model.RebuildInfo, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "api.StatusInterface.GetRebuildStatus")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx":            ctx,
				"objStoreName":   objStoreName,
				"ssPodName":      ssPodName,
				"ssPodNameSpace": ssPodNameSpace,
				"level":          level,
				"params":         params}, map[string]interface{}{
				"rp1": rp1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.StatusInterface.GetRebuildStatus(ctx, objStoreName, ssPodName, ssPodNameSpace, level, params)
}
